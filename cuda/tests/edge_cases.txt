# Edge cases and special scenarios for FSA Engine testing

[Edge_EmptyExpression]
regex = 
input = 
expect = true

[Edge_EmptyExpressionWithInput]
regex = 
input = 0101
expect = false

[Edge_ExpressionWithEmptyInput]
regex = (0|1)*
input = 
expect = true

[Edge_ExactMatch]
regex = 01010101
input = 01010101
expect = true

[Edge_VeryLongInput]
regex = (0|1)*1
input = 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
expect = true

[Edge_VeryLongRegex]
regex = 0(0|1)(0|1)(0|1)(0|1)(0|1)(0|1)(0|1)(0|1)(0|1)(0|1)(0|1)(0|1)(0|1)(0|1)(0|1)1
input = 0000000000000001
expect = true

[Edge_AmbiguousRegex]
# Ambiguous matching with multiple alternations
regex = (0|01)(1|01)
input = 0101
expect = true

[Edge_NestedGroups]
regex = ((0|1)(0|1))*((0|1)(0|1)(0|1))*
input = 01010101
expect = true

[Edge_ComplexGrouping]
regex = (0(01)*1|1(10)*0)
input = 001011
expect = true

[Edge_NoValidTransition]
# Should fail as regex only accepts strings with 0s and 1s
regex = (0|1)*
input = 23456
expect = false

[Edge_ExtremeBacktracking]
# Pattern that could cause extreme backtracking in naive implementations
regex = (0|1)*0(0|1)*0(0|1)*0(0|1)*
input = 00000000000000000000000000000001111111111111111111111111110000
expect = true
